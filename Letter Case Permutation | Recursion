#include <bits/stdc++.h>

#include <iostream>
#include<vector>
#include<unordered_map>
using namespace std;

vector < string > v;
unordered_map<string,int>mp;

bool checkExist(string op){
    if (mp.find(op) != mp.end())
    return false;
    else return true;
}


void subset (string s, string op)
{
  if (s.size () == 0)
    {
      if(checkExist(op)){ // this if is used to insert insert only unique elements in vector
          mp[op]++;       // checkExist is function which returns true or false on basis of if element present or not
          v.push_back(op);
      }
    //   v.push_back(op);   //this can be used if unqiue conditions is not constraint by doing comment on above if
        return;
    }
  string op1 = op;
  string op2 = op;

  if (s[0] == toupper(s[0])) //Check if element is uppercase
    {
     op1.push_back (tolower(s[0])); // If yes then insert it in lowercase
    }
    else if(s[0] == tolower(s[0])){ // or vice-versa
     op1.push_back (toupper(s[0]));
    }
    else{
          op1.push_back (s[0]); // if digit then no update
    }
  // op1.push_back(s[0]);
  op2.push_back (s[0]);
  s.erase (s.begin () + 0);
  subset (s, op1);
  subset (s, op2);
  return;
}

int main ()
{
  string s;
  cin >> s;
  string op = "";
  subset (s, op);
  //sort(v.begin(),v.end());
  for (int i = 0; i < v.size (); i++)
    cout << i << ": " << v[i] << endl;
  return 0;
}
